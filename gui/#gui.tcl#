#############################################################################
# Generated by PAGE version 7.3
#  in conjunction with Tcl version 8.6
#  Mar 09, 2022 12:00:15 AM CET  platform: Linux
set vTcl(timestamp) ""
if {![info exists vTcl(borrow)]} {
    ::vTcl::MessageBox -title Error -message  "You must open project files from within PAGE."
    exit}


set image_list { 
}
vTcl:create_project_images $image_list   ;# In image.tcl

if {!$vTcl(borrow) && !$vTcl(template)} {

set vTcl(actual_gui_font_dft_desc)  TkDefaultFont
set vTcl(actual_gui_font_dft_name)  TkDefaultFont
set vTcl(actual_gui_font_text_desc)  TkTextFont
set vTcl(actual_gui_font_text_name)  TkTextFont
set vTcl(actual_gui_font_fixed_desc)  TkFixedFont
set vTcl(actual_gui_font_fixed_name)  TkFixedFont
set vTcl(actual_gui_font_menu_desc)  TkMenuFont
set vTcl(actual_gui_font_menu_name)  TkMenuFont
set vTcl(actual_gui_font_tooltip_desc)  TkDefaultFont
set vTcl(actual_gui_font_tooltip_name)  TkDefaultFont
set vTcl(actual_gui_font_treeview_desc)  TkDefaultFont
set vTcl(actual_gui_font_treeview_name)  TkDefaultFont
set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_analog) #ececec
set vTcl(actual_gui_menu_analog) #ececec
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #d9d9d9
set vTcl(analog_color_p) #d9d9d9
set vTcl(analog_color_m) #ececec
set vTcl(active_fg) #000000
set vTcl(actual_gui_menu_active_bg)  #ececec
set vTcl(actual_gui_menu_active_fg)  #000000
set vTcl(pr,autoalias) 1
set vTcl(pr,relative_placement) 1
set vTcl(mode) Relative
}




proc vTclWindow.err_top {base} {
    global vTcl
    if {$base == ""} {
        set base .err_top
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    set target $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -background $vTcl(actual_gui_bg) -highlightcolor black 
    wm focusmodel $top passive
    wm geometry $top 646x207+884+20
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 3271 1050
    wm minsize $top 1 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    set toptitle "Error Information"
    wm title $top $toptitle
    namespace eval ::widgets::${top}::ClassOption {}
    set ::widgets::${top}::ClassOption(-toptitle) $toptitle
    set vTcl(real_top) {}
    vTcl:withBusyCursor {
    frame $top.f \
        -background $vTcl(actual_gui_bg) -highlightcolor black 
    set site_3_0 $top.f
    button $site_3_0.b1 \
        -activebackground #f9f9f9 -activeforeground black \
        -background $vTcl(actual_gui_bg) \
        -command {
        set exit_flag 1
        set exitvar 1
    } \
        -font TkDefaultFont -foreground black -highlightcolor black \
        -text {Close and Exit} 
    button $site_3_0.b2 \
        -activebackground #f9f9f9 -activeforeground black \
        -background $vTcl(actual_gui_bg) \
        -command {
        vTcl:save_err_msg
        set exit_flag 1
        set exitvar 1
    } \
        -font TkDefaultFont -foreground black -highlightcolor black \
        -text {Save Error Msg and Exit} 
    button $site_3_0.b3 \
        -activebackground #f9f9f9 -activeforeground black \
        -background $vTcl(actual_gui_bg) \
        -command {
        destroy .err_top
       set exit_flag 0 
        set exitvar 1
    } \
        -font TkDefaultFont -foreground black -highlightcolor black \
        -text Dismiss 
    pack $site_3_0.b1 \
        -in $site_3_0 -anchor center -expand 1 -fill none -side right 
    pack $site_3_0.b2 \
        -in $site_3_0 -anchor center -expand 1 -fill none -side left 
    pack $site_3_0.b3 \
        -in $site_3_0 -anchor center -expand 1 -fill none -side left 
    text $top.t \
        -background $vTcl(actual_gui_bg) -font TkFixedFont -foreground black \
        -height 10 -highlightcolor black -insertbackground black \
        -selectbackground blue -selectforeground white 
    $top.t configure -font "TkFixedFont"
    $top.t insert end text
    ###################
    # SETTING GEOMETRY
    ###################
    pack $top.f \
        -in $top -anchor center -expand 0 -fill x -side top 
    pack $top.t \
        -in $top -anchor center -expand 0 -fill none -side top 
    } ;# end vTcl:withBusyCursor 

    vTcl:FireEvent $base <<Ready>>
}

proc vTclWindow.top42 {base} {
    global vTcl
    if {$base == ""} {
        set base .top42
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    set target $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -background $vTcl(actual_gui_bg) -highlightcolor black 
    wm focusmodel $top passive
    wm geometry $top 1635x836+120+115
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1924 1061
    wm minsize $top 600 255
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    set toptitle "New Toplevel"
    wm title $top $toptitle
    namespace eval ::widgets::${top}::ClassOption {}
    set ::widgets::${top}::ClassOption(-toptitle) $toptitle
    vTcl:DefineAlias "$top" "Toplevel1" vTcl:Toplevel:WidgetProc "" 1
    set vTcl(real_top) {}
    vTcl:withBusyCursor {
    button $top.but43 \
        -background $vTcl(actual_gui_bg) -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) -highlightcolor black -pady 0 \
        -text Open 
    vTcl:DefineAlias "$top.but43" "btn_open" vTcl:WidgetProc "Toplevel1" 1
    button $top.but44 \
        -background $vTcl(actual_gui_bg) -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) -highlightcolor black -pady 0 \
        -text Normalize 
    vTcl:DefineAlias "$top.but44" "nrm_btn" vTcl:WidgetProc "Toplevel1" 1
    frame $top.fra46 \
        -borderwidth 2 -relief sunken -background $vTcl(actual_gui_bg) \
        -height 635 -highlightcolor black -width 915 
    vTcl:DefineAlias "$top.fra46" "Viewer_Frame" vTcl:WidgetProc "Toplevel1" 1
    button $top.but47 \
        -background $vTcl(actual_gui_bg) -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) -highlightcolor black -pady 0 \
        -text {Freq corr} 
    vTcl:DefineAlias "$top.but47" "frq_corr" vTcl:WidgetProc "Toplevel1" 1
    ttk::style configure TFrame -background $vTcl(actual_gui_bg)
    ttk::frame $top.tFr49 \
        -borderwidth 2 -relief groove -width 585 -height 295 
    vTcl:DefineAlias "$top.tFr49" "TFrame1" vTcl:WidgetProc "Toplevel1" 1
    ttk::style configure TButton -background $vTcl(actual_gui_bg)
    ttk::style configure TButton -foreground $vTcl(actual_gui_fg)
    ttk::style configure TButton -font "$vTcl(actual_gui_font_dft_desc)"
    ttk::button $top.tBu46 \
        -takefocus {} -text Plot 
    vTcl:DefineAlias "$top.tBu46" "plt_btn" vTcl:WidgetProc "Toplevel1" 1
    label $top.lab47 \
        -activebackground #f9f9f9 -activeforeground black \
        -background $vTcl(actual_gui_bg) -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) -highlightcolor black \
        -text {Dataset Browser} 
    vTcl:DefineAlias "$top.lab47" "Label1" vTcl:WidgetProc "Toplevel1" 1
    button $top.but48 \
        -background $vTcl(actual_gui_bg) -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) -highlightcolor black -pady 0 \
        -text X 
    vTcl:DefineAlias "$top.but48" "x_ch_btn" vTcl:WidgetProc "Toplevel1" 1
    button $top.but49 \
        -background $vTcl(actual_gui_bg) -font TkDefaultFont \
        -foreground $vTcl(actual_gui_fg) -highlightcolor black -pady 0 \
        -text Y 
    vTcl:DefineAlias "$top.but49" "y_ch_btn" vTcl:WidgetProc "Toplevel1" 1
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.but43 \
        -in $top -x 10 -y 10 -width 78 -relwidth 0 -height 24 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.but44 \
        -in $top -x 610 -y 480 -width 77 -relwidth 0 -height 24 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.fra46 \
        -in $top -x 700 -y 10 -width 915 -relwidth 0 -height 635 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.but47 \
        -in $top -x 610 -y 450 -width 77 -relwidth 0 -height 24 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.tFr49 \
        -in $top -x 10 -y 80 -width 585 -relwidth 0 -height 295 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.tBu46 \
        -in $top -x 610 -y 200 -anchor nw -bordermode ignore 
    place $top.lab47 \
        -in $top -x 10 -y 60 -anchor nw -bordermode ignore 
    place $top.but48 \
        -in $top -x 610 -y 230 -width 37 -relwidth 0 -height 34 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.but49 \
        -in $top -x 650 -y 230 -width 37 -relwidth 0 -height 34 -relheight 0 \
        -anchor nw -bordermode ignore 
    } ;# end vTcl:withBusyCursor 

    vTcl:FireEvent $base <<Ready>>
}

proc 36 {args} {return 1}


Window show .
set btop1 ""
if {$vTcl(borrow)} {
    set btop1 .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop1 $vTcl(tops)] != -1} {
        set btop1 .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop1
Window show .err_top $btop1
if {$vTcl(borrow)} {
    $btop1 configure -background plum
}
set btop2 ""
if {$vTcl(borrow)} {
    set btop2 .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop2 $vTcl(tops)] != -1} {
        set btop2 .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop2
Window show .top42 $btop2
if {$vTcl(borrow)} {
    $btop2 configure -background plum
}

